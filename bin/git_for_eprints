#!/usr/bin/env perl
use strict;
use warnings;
use File::Basename;
use IO::File;

die("SSH does not have authorization agent forwarded to this sever, try ssh -T -X or a change to your ssh config")
  unless(  $ENV{SSH_AUTH_SOCK} );

die("SSH does not have X forwarded to this sever, try ssh -T -X or a change to your ssh config")
  unless( $ENV{DISPLAY} );

my $sock=$ENV{SSH_AUTH_SOCK};
my $sockdir=dirname($sock);

# Allow eprints to use ssh socket for git keys
# not all that safe
system('chmod','a+rwx',$sockdir,$sock);

my $filename = '/tmp/ep';
my $tmp = IO::File->new($filename,'w');

print $tmp "export SSH_AUTH_SOCK=$sock\n";
print $tmp "export GIT_AUTHOR_EMAIL='". $ENV{USER} . "\@cornell.edu'\n";
print $tmp "export GIT_COMMITTER_EMAIL=\$GIT_AUTHOR_EMAIL\n";
if($ENV{USER} eq 'bdc34' ){
  print $tmp "export GIT_AUTHOR_NAME='Brian D. Caruso'\n";
  print $tmp "export GIT_COMMITTER_NAME='Brian D. Caruso'\n";
}

# setup xauth for X forwarding
my $display = $ENV{DISPLAY};
$display =~ /.*:(\d*)/; # get just 12 from localhost:12.0
my $num = $1;
my $xauthline = qx/ xauth list | grep ":$num " /;
print $tmp "xauth add $xauthline\n";

#pick up bashrc stuff
my $rc = $ENV{HOME} . '/.bashrc';
if ( -e $rc ) {
  print $tmp "source $rc \n";
}else{
  print "no bashrc found at '$rc' \n";
}

# clear out once used
print $tmp "echo '' >  $filename\n";

`chmod a+rwx $filename`;

print "sudo to e-prints and then source $filename \n";
