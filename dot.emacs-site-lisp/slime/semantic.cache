;; Object slime/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "slime/"
  :tables (list 
   (semanticdb-table "slime.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("unless" code nil nil [2059 2186]) ("cl" include nil nil [2043 2056]) ("comint" include nil nil [2188 2205]) ("timer" include nil nil [2206 2222]) ("pp" include nil nil [2223 2236]) ("hideshow" include nil nil [2237 2256]) ("hyperspec" include nil nil [2257 2277]) ("font-lock" include nil nil [2278 2298]) ("when" code nil nil [2299 2345]) ("easymenu" include nil nil [2346 2365]) ("tree-widget" include nil nil [2366 2388]) ("slime-use-autodoc-mode" variable nil nil [2390 2491]) ("slime-setup" function (:arguments ("&key" "autodoc" "typeout-frame")) nil [2493 2781]) ("slime-lisp-mode-hook" function nil nil [2783 2978]) ("slime-path" variable (:default-value (let ((path (or (locate-library "slime") load-file-name))) (and path (file-name-directory path)))) nil [3001 3327]) ("defgroup" code nil nil [3370 3484]) ("defgroup" code nil nil [3502 3612]) ("slime-truncate-lines" variable (:default-value t) nil [3614 3837]) ("slime-update-modeline-package" variable (:default-value t) nil [3839 4044]) ("slime-kill-without-query-p" variable nil nil [4046 4268]) ("slime-startup-animation" variable (:default-value t) nil [4270 4429]) ("defgroup" code nil nil [4449 4540]) ("slime-multiprocessing" variable nil nil [4633 4843]) ("slime-backend" variable (:default-value "swank-loader.lisp") nil [4845 5105]) ("slime-connected-hook" variable nil nil [5107 5237]) ("slime-translate-to-lisp-filename-function" variable (:default-value (quote identity)) nil [5239 5551]) ("slime-translate-from-lisp-filename-function" variable (:default-value (quote identity)) nil [5553 5782]) ("defgroup" code nil nil [5802 5911]) ("slime-edit-definition-fallback-function" variable nil nil [5913 6353]) ("slime-compilation-finished-hook" variable (:default-value (quote slime-maybe-list-compiler-notes)) nil [6355 6665]) ("slime-complete-symbol-function" variable (:default-value (quote slime-complete-symbol*)) nil [6667 6996]) ("slime-complete-symbol*-fancy" variable nil nil [6998 7152]) ("slime-space-information-p" variable (:default-value t) nil [7154 7279]) ("slime-display-compilation-output" variable (:default-value t) nil [7281 7469]) ("slime-sbcl-manual-root" variable (:user-visible-flag t :default-value "http://www.sbcl.org/manual/") nil [7471 7636]) ("defgroup" code nil nil [7662 7778]) ("slime-underline-color" function (:arguments ("color")) nil [7780 8058]) ("slime-error-face" variable (:default-value (\` ((((class color) (background light)) (:underline (\, (slime-underline-color "red")))) (((class color) (background dark)) (:underline (\, (slime-underline-color "red")))) (t (:underline t))))) nil [8060 8355]) ("slime-warning-face" variable (:default-value (\` ((((class color) (background light)) (:underline (\, (slime-underline-color "orange")))) (((class color) (background dark)) (:underline (\, (slime-underline-color "coral")))) (t (:underline t))))) nil [8357 8661]) ("slime-style-warning-face" variable (:default-value (\` ((((class color) (background light)) (:underline (\, (slime-underline-color "brown")))) (((class color) (background dark)) (:underline (\, (slime-underline-color "gold")))) (t (:underline t))))) nil [8663 8977]) ("slime-note-face" variable (:default-value (\` ((((class color) (background light)) (:underline (\, (slime-underline-color "brown4")))) (((class color) (background dark)) (:underline (\, (slime-underline-color "light goldenrod")))) (t (:underline t))))) nil [8979 9287]) ("slime-face-inheritance-possible-p" function nil nil [9289 9436]) ("slime-highlight-face" variable (:default-value (if (slime-face-inheritance-possible-p) (quote ((t (:inherit highlight :underline nil)))) (quote ((((class color) (background light)) (:background "darkseagreen2")) (((class color) (background dark)) (:background "darkolivegreen")) (t (:inverse-video t)))))) nil [9438 9821]) ("defgroup" code nil nil [9835 9939]) ("sldb-enable-styled-backtrace" variable (:default-value t) nil [9941 10119]) ("sldb-show-catch-tags" variable (:default-value t) nil [10121 10286]) ("def-sldb-faces" function (:arguments ("&rest" "faces")) nil [10288 10681]) ("def-sldb-face" function (:arguments ("name" "description" "&optional" "default")) nil [10683 10946]) ("def-sldb-faces" code nil nil [10948 11810]) ("defgroup" code nil nil [11830 11947]) ("slime-repl-shortcut-dispatch-char" variable (:default-value 44) nil [11949 12105]) ("slime-repl-prompt-face" variable (:default-value (if (slime-face-inheritance-possible-p) (quote ((t (:inherit font-lock-keyword-face)))) (quote ((((class color) (background light)) (:foreground "Purple")) (((class color) (background dark)) (:foreground "Cyan")) (t (:weight bold)))))) nil [12107 12448]) ("slime-repl-output-face" variable (:default-value (if (slime-face-inheritance-possible-p) (quote ((t (:inherit font-lock-string-face)))) (quote ((((class color) (background light)) (:foreground "RosyBrown")) (((class color) (background dark)) (:foreground "LightSalmon")) (t (:slant italic)))))) nil [12450 12802]) ("slime-repl-input-face" variable (:default-value (quote ((t (:bold t))))) nil [12804 12922]) ("slime-repl-result-face" variable (:default-value (quote ((t nil)))) nil [12924 13049]) ("define-minor-mode" code nil nil [13088 14523]) ("make-variable-buffer-local" code nil nil [14525 14694]) ("slime-update-modeline-package" function nil nil [14696 15032]) ("slime-pretty-package-name" function (:arguments ("name")) nil [15034 15415]) ("when" code nil nil [15417 15516]) ("define-minor-mode" code nil nil [15544 15915]) ("add-to-list" code nil nil [16037 16202]) ("add-to-list" code nil nil [16204 16318]) ("inferior-slime-return" function (:user-visible-flag t) nil [16320 16721]) ("inferior-slime-indent-line" function (:user-visible-flag t) nil [16723 17180]) ("slime-input-complete-p" function (:arguments ("start" "end")) nil [17182 17817]) ("inferior-slime-input-complete-p" function nil nil [17819 18049]) ("inferior-slime-closing-return" function (:user-visible-flag t) nil [18051 18443]) ("slime-keys" variable (:default-value (quote (("\360" slime-previous-note) ("\356" slime-next-note) ("\343" slime-remove-notes :prefixed t) ("" slime-compile-and-load-file :prefixed t) ("\353" slime-compile-file :prefixed t) ("" slime-compile-defun :prefixed t) ("" slime-load-file :prefixed t) ("\211" slime-complete-symbol :inferior t) ("	" slime-complete-symbol :prefixed t :inferior t) ("\351" slime-fuzzy-complete-symbol :prefixed t :inferior t) ("\256" slime-edit-definition :inferior t :sldb t) ("\254" slime-pop-find-definition-stack :inferior t :sldb t) ("\252" slime-pop-find-definition-stack :inferior t :sldb t) ("" slime-close-parens-at-point :prefixed t :inferior t) ("\361" slime-reindent-defun :inferior t) ("" slime-eval-last-expression :inferior t) ("\345" slime-eval-last-expression-display-output :inferior t) ("" slime-pprint-eval-last-expression :prefixed t :inferior t) ("" slime-eval-region :prefixed t :inferior t) ("\230" slime-eval-defun) (":" slime-interactive-eval :prefixed t :sldb t) ("" slime-interactive-eval :prefixed t :sldb t :inferior t) ("E" slime-edit-value :prefixed t :sldb t :inferior t) ("" slime-switch-to-output-buffer :prefixed t :sldb t) ("" slime-interrupt :prefixed t :inferior t :sldb t) ("\347" slime-quit :prefixed t :inferior t :sldb t) (" " slime-space :inferior t) ("" slime-complete-form :prefixed t :inferior t) ("" slime-describe-function :prefixed t :inferior t :sldb t) ("\344" slime-disassemble-symbol :prefixed t :inferior t :sldb t) ("" slime-toggle-trace-fdefinition :prefixed t :sldb t) ("" slime-undefine-function :prefixed t) ("" slime-macroexpand-1 :prefixed t :inferior t) ("\355" slime-macroexpand-all :prefixed t :inferior t) ("\260" slime-restore-window-configuration :prefixed t :inferior t) ([(control meta 46)] slime-next-location :inferior t) ("~" slime-sync-package-and-default-directory :prefixed t :inferior t) ("\360" slime-repl-set-package :prefixed t :inferior t) ("<" slime-list-callers :prefixed t :inferior t :sldb t) (">" slime-list-callees :prefixed t :inferior t :sldb t) ("I" slime-inspect :prefixed t :inferior t :sldb t) ("" slime-close-all-sexp :prefixed t :inferior t :sldb t) ("t" slime-list-threads :prefixed t :inferior t :sldb t) ("c" slime-list-connections :prefixed t :inferior t :sldb t) ("" slime-nop :prefixed t :inferior t :sldb t) ("" slime-nop :prefixed t :inferior t :sldb t)))) nil [18521 21521]) ("slime-nop" function (:user-visible-flag t) nil [21523 21660]) ("slime-doc-map" variable (:default-value (make-sparse-keymap)) nil [21662 21767]) ("slime-doc-bindings" variable (:default-value (quote ((97 slime-apropos) (122 slime-apropos-all) (112 slime-apropos-package) (100 slime-describe-symbol) (102 slime-describe-function) (104 slime-hyperspec-lookup) (126 common-lisp-hyperspec-format)))) nil [21769 22012]) ("slime-who-map" variable (:default-value (make-sparse-keymap)) nil [22016 22116]) ("slime-who-bindings" variable (:default-value (quote ((99 slime-who-calls) (119 slime-calls-who) (114 slime-who-references) (98 slime-who-binds) (115 slime-who-sets) (109 slime-who-macroexpands) (97 slime-who-specializes)))) nil [22118 22338]) ("slime-prefix-key" variable (:default-value "") nil [22374 22463]) ("slime-define-key" function (:arguments ("key" "command" "&key" "prefixed" "inferior")) nil [22465 22884]) ("slime-init-keymaps" function (:user-visible-flag t) nil [22886 24457]) ("slime-control-modified-char" function (:arguments ("char")) nil [24459 24639]) ("slime-init-keymaps" code nil nil [24641 24661]) ("slime-easy-menu" variable (:default-value (let ((C (quote (slime-connected-p)))) (\` ("SLIME" ["Edit Definition..." slime-edit-definition (\, C)] ["Return From Definition" slime-pop-find-definition-stack (\, C)] ["Complete Symbol" slime-complete-symbol (\, C)] ["Fuzzy Complete Symbol" slime-fuzzy-complete-symbol (\, C)] ["Complete Form" slime-complete-form (\, C)] ["Show REPL" slime-switch-to-output-buffer (\, C)] "--" ("Evaluation" ["Eval Defun" slime-eval-defun (\, C)] ["Eval Last Expression" slime-eval-last-expression (\, C)] ["Eval And Pretty-Print" slime-pprint-eval-last-expression (\, C)] ["Eval Region" slime-eval-region (\, C)] ["Scratch Buffer" slime-scratch (\, C)] ["Interactive Eval..." slime-interactive-eval (\, C)] ["Edit Lisp Value..." slime-edit-value (\, C)]) ("Debugging" ["Macroexpand Once..." slime-macroexpand-1 (\, C)] ["Macroexpand All..." slime-macroexpand-all (\, C)] ["Toggle Trace..." slime-toggle-trace-fdefinition (\, C)] ["Disassemble..." slime-disassemble-symbol (\, C)] ["Inspect..." slime-inspect (\, C)]) ("Compilation" ["Compile Defun" slime-compile-defun (\, C)] ["Compile/Load File" slime-compile-and-load-file (\, C)] ["Compile File" slime-compile-file (\, C)] ["Compile Region" slime-compile-region (\, C)] ["Compile System" slime-load-system (\, C)] "--" ["Next Note" slime-next-note t] ["Previous Note" slime-previous-note t] ["Remove Notes" slime-remove-notes t] ["List Notes" slime-list-compiler-notes (\, C)]) ("Cross Reference" ["Who Calls..." slime-who-calls (\, C)] ["Who References... " slime-who-references (\, C)] ["Who Sets..." slime-who-sets (\, C)] ["Who Binds..." slime-who-binds (\, C)] ["Who Macroexpands..." slime-who-macroexpands (\, C)] ["Who Specializes..." slime-who-specializes (\, C)] ["List Callers..." slime-list-callers (\, C)] ["List Callees..." slime-list-callees (\, C)] ["Next Location" slime-next-location t]) ("Editing" ["Close All Parens" slime-close-all-sexp t] ["Check Parens" check-parens t] ["Update Indentation" slime-update-indentation (\, C)] ["Select Buffer" slime-selector t]) ("Profiling" ["Toggle Profiling..." slime-toggle-profile-fdefinition (\, C)] ["Profile Package" slime-profile-package (\, C)] ["Unprofile All" slime-unprofile-all (\, C)] ["Show Profiled" slime-profiled-functions (\, C)] "--" ["Report" slime-profile-report (\, C)] ["Reset Counters" slime-profile-reset (\, C)]) ("Documentation" ["Describe Symbol..." slime-describe-symbol (\, C)] ["Apropos..." slime-apropos (\, C)] ["Apropos all..." slime-apropos-all (\, C)] ["Apropos Package..." slime-apropos-package (\, C)] ["Hyperspec..." slime-hyperspec-lookup t]) "--" ["Interrupt Command" slime-interrupt (\, C)] ["Abort Async. Command" slime-quit (\, C)] ["Sync Package & Directory" slime-sync-package-and-default-directory (\, C)] ["Set Package in REPL" slime-repl-set-package (\, C)])))) nil [24687 28329]) ("slime-repl-easy-menu" variable (:default-value (let ((C (quote (slime-connected-p)))) (\` ("REPL" ["Send Input" slime-repl-return (\, C)] ["Close and Send Input " slime-repl-closing-return (\, C)] ["Interrupt Lisp process" slime-interrupt (\, C)] "--" ["Previous Input" slime-repl-previous-input t] ["Next Input" slime-repl-next-input t] ["Goto Previous Prompt " slime-repl-previous-prompt t] ["Goto Next Prompt " slime-repl-next-prompt t] ["Clear Last Output" slime-repl-clear-output t] ["Clear Buffer " slime-repl-clear-buffer t])))) nil [28331 28962]) ("slime-sldb-easy-menu" variable (:default-value (let ((C (quote (slime-connected-p)))) (\` ("SLDB" ["Next Frame" sldb-down t] ["Previous Frame" sldb-up t] ["Toggle Frame Details" sldb-toggle-details t] ["List Locals" sldb-list-locals (\, C)] ["Next Frame (Details)" sldb-details-down t] ["Previous Frame (Details)" sldb-details-up t] "--" ["Eval Expression..." slime-interactive-eval (\, C)] ["Eval in Frame..." sldb-eval-in-frame (\, C)] ["Eval in Frame (pretty print)..." sldb-pprint-eval-in-frame (\, C)] ["Inspect In Frame..." sldb-inspect-in-frame (\, C)] ["Inspect Condition Object" sldb-inspect-condition (\, C)] ["Print Condition to REPL" sldb-print-condition t] "--" ["Restart Frame" sldb-restart-frame (\, C)] ["Return from Frame..." sldb-return-from-frame (\, C)] ("Invoke Restart" ["Continue" sldb-continue (\, C)] ["Abort" sldb-abort (\, C)] ["Step" sldb-step (\, C)]) "--" ["Quit (throw)" sldb-quit (\, C)] ["Break With Default Debugger" sldb-break-with-default-debugger (\, C)])))) nil [28970 30076]) ("easy-menu-define" code nil nil [30079 30150]) ("add-hook" code nil nil [30152 30280]) ("add-hook" code nil nil [30282 30542]) ("add-hook" code nil nil [30544 30786]) ("make-variable-buffer-local" code nil nil [30829 31001]) ("slime-pre-command-hook" function nil nil [31003 31231]) ("slime-post-command-hook" function nil nil [31233 31349]) ("slime-setup-command-hooks" function nil nil [31351 31654]) ("add-hook" code nil nil [31656 31710]) ("defmacro*" code nil nil [31957 32164]) ("put" code nil nil [32166 32205]) ("with-lexical-bindings" function (:arguments ("variables" "&rest" "body")) nil [32207 32431]) ("put" code nil nil [32433 32485]) ("destructure-case" function (:arguments ("value" "&rest" "patterns")) nil [32487 33477]) ("put" code nil nil [33479 33526]) ("slime-define-keys" function (:arguments ("keymap" "&rest" "key-command")) nil [33528 33741]) ("put" code nil nil [33743 33791]) ("defmacro*" code nil nil [33793 34354]) ("put" code nil nil [34356 34398]) ("slime-message" function (:arguments ("format" "&rest" "args")) nil [34449 34864]) ("slime-display-message" function (:arguments ("message" "buffer-name")) nil [34866 36045]) ("slime-create-message-window" function nil nil [36047 36480]) ("slime-background-message" function (:arguments ("format-string" "&rest" "format-args")) nil [36495 37062]) ("slime-oneliner" function (:arguments ("string")) nil [37064 37324]) ("slime-set-truncate-lines" function nil nil [37339 37510]) ("slime-read-package-name" function (:arguments ("prompt" "&optional" "initial-value")) nil [37525 37891]) ("slime-read-symbol-name" function (:arguments ("prompt" "&optional" "query")) nil [37906 38384]) ("slime-propertize-region" function (:arguments ("props" "&rest" "body")) nil [38399 38753]) ("put" code nil nil [38755 38809]) ("slime-insert-propertized" function (:arguments ("props" "&rest" "args")) nil [38824 39000]) ("slime-indent-and-complete-symbol" function (:user-visible-flag t) nil [39002 39649]) ("slime-with-rigid-indentation" function (:arguments ("level" "&rest" "body")) nil [39651 39948]) ("put" code nil nil [39950 40009]) ("make-variable-buffer-local" code nil nil [40042 40227]) ("make-variable-buffer-local" code nil nil [40229 40369]) ("slime-get-temp-buffer-create" function (:arguments ("name" "&key" "mode" "noselectp")) nil [40384 41426]) ("defmacro*" code nil nil [41441 42190]) ("put" code nil nil [42192 42255]) ("define-minor-mode" code nil nil [42257 42392]) ("slime-temp-buffer-quit" function (:user-visible-flag t) nil [42407 42646]) ("slime-dismiss-temp-buffer" function nil nil [42661 43055]) ("slime-window-config-fingerprint" function (:arguments ("&optional" "frame")) nil [43057 43524]) ("slime-frame-windows" function (:arguments ("&optional" "frame")) nil [43526 43820]) ("slime-to-lisp-filename" function (:arguments ("filename")) nil [44061 44368]) ("slime-from-lisp-filename" function (:arguments ("filename")) nil [44370 44592]) ("slime-inferior-lisp-program-history" variable (:default-value (quote nil)) nil [44764 44867]) ("slime" function (:user-visible-flag t :arguments ("&optional" "command" "buffer" "coding-system")) nil [44869 46089]) ("slime-connect" function (:user-visible-flag t :arguments ("host" "port" "&optional" "kill-old-p" "symbolic-lisp-name")) nil [46091 46758]) ("slime-start-and-load" function (:user-visible-flag t :arguments ("filename" "&optional" "package")) nil [46760 47410]) ("slime-load-file-set-package" function (:arguments ("filename" "package")) nil [47412 47742]) ("define-slime-dialect" function (:arguments ("name" "&optional" "program" "hook")) nil [47744 48492]) ("slime-connect-retry-timer" variable nil nil [49216 49316]) ("slime-bytecode-stale-p" function nil nil [49345 49726]) ("slime-recompile-bytecode" function (:user-visible-flag t) nil [49728 50155]) ("slime-urge-bytecode-recompile" function nil nil [50157 50650]) ("slime-abort-connection" function (:user-visible-flag t) nil [50652 50915]) ("slime-maybe-start-lisp" function (:arguments ("command" "buffername")) nil [50968 51641]) ("slime-init-command" function nil nil [51643 52057]) ("slime-start-lisp" function (:arguments ("command" "buffername" "init-string")) nil [52059 52422]) ("slime-inferior-lisp" function (:arguments ("command" "buffername")) nil [52424 52861]) ("slime-inferior-connect" function (:arguments ("process" "&optional" "retries" "symbolic-lisp-name")) nil [52863 53195]) ("slime-start-swank-server" function (:arguments ("process")) nil [53197 53588]) ("slime-swank-port-file" function nil nil [53590 53935]) ("slime-read-port-and-connect" function (:arguments ("inferior-process" "retries" "&optional" "symbolic-lisp-name")) nil [53937 55406]) ("slime-read-swank-port" function nil nil [55408 55728]) ("slime-hide-inferior-lisp-buffer" function nil nil [55730 56382]) ("slime-user-first-name" function nil nil [56412 56637]) ("slime-words-of-encouragement" variable (:default-value (\` ("Let the hacking commence!" "Hacks and glory await!" "Hack and be merry!" "Your hacking starts... NOW!" "May the source be with you!" "Take this REPL, brother, and may it serve you well." "Lemonodor-fame is but a hack away!" (\, (format "%s, this could be the start of a beautiful program." (slime-user-first-name)))))) nil [56639 57103]) ("slime-random-words-of-encouragement" function nil nil [57105 57303]) ("slime-net-processes" variable nil nil [57880 57964]) ("slime-net-process-close-hooks" variable (:default-value (quote nil)) nil [57966 58138]) ("slime-net-coding-system" variable (:user-visible-flag t :default-value (find-if (if (featurep (quote xemacs)) (function find-coding-system) (function coding-system-p)) (quote (iso-latin-1-unix iso-8859-1-unix binary)))) nil [58140 58350]) ("slime-net-valid-coding-systems" variable (:default-value (quote ((iso-latin-1-unix nil :iso-latin-1-unix) (iso-8859-1-unix nil :iso-latin-1-unix) (binary nil :iso-latin-1-unix) (utf-8-unix t :utf-8-unix) (emacs-mule-unix t :emacs-mule-unix)))) nil [58352 58702]) ("slime-net-connect" function (:arguments ("host" "port")) nil [58718 59411]) ("slime-make-net-buffer" function (:arguments ("name")) nil [59413 59760]) ("slime-find-coding-system" function (:arguments ("&optional" "coding-system")) nil [59762 60159]) ("slime-check-coding-system" function (:arguments ("&optional" "coding-system")) nil [60163 60281]) ("slime-coding-system-mulibyte-p" function (:arguments ("coding-system")) nil [60283 60389]) ("slime-coding-system-cl-name" function (:arguments ("coding-system")) nil [60391 60493]) ("slime-net-send" function (:arguments ("sexp" "proc")) nil [60509 61096]) ("slime-safe-encoding-p" function (:arguments ("coding-system" "string")) nil [61098 61636]) ("slime-net-close" function (:arguments ("process")) nil [61638 61943]) ("slime-net-sentinel" function (:arguments ("process" "message")) nil [61945 62125]) ("slime-net-filter" function (:arguments ("process" "string")) nil [62263 62529]) ("slime-run-when-idle" function (:arguments ("function")) nil [62531 62721]) ("slime-process-available-input" function nil nil [62723 63682]) ("slime-net-have-input-p" function nil nil [63684 63882]) ("slime-net-read" function nil nil [63884 64206]) ("slime-net-decode-length" function nil nil [64208 64358]) ("slime-net-encode-length" function (:arguments ("n")) nil [64360 64463]) ("slime-prin1-to-string" function (:arguments ("sexp")) nil [64465 64774]) ("slime-dispatching-connection" variable nil nil [66859 67073]) ("make-variable-buffer-local" code nil nil [67075 67238]) ("slime-default-connection" variable nil nil [67240 67439]) ("slime-connection" function nil nil [67441 67931]) ("slime-select-connection" function (:arguments ("process")) nil [67933 68057]) ("defmacro*" code nil nil [68059 68424]) ("put" code nil nil [68426 68485]) ("slime-state-name" variable (:default-value "[??]") nil [68487 68634]) ("slime-set-state" function (:arguments ("name" "&optional" "connection")) nil [68636 69009]) ("slime-def-connection-var" function (:arguments ("varname" "&rest" "initial-value-and-doc")) nil [69044 69995]) ("put" code nil nil [69997 70052]) ("unless" code nil nil [70095 70311]) ("slime-def-connection-var" code nil nil [70313 70444]) ("slime-def-connection-var" code nil nil [70446 70585]) ("slime-def-connection-var" code nil nil [70587 70752]) ("slime-def-connection-var" code nil nil [70754 70924]) ("slime-def-connection-var" code nil nil [70926 71006]) ("slime-def-connection-var" code nil nil [71008 71118]) ("slime-def-connection-var" code nil nil [71120 71254]) ("slime-def-connection-var" code nil nil [71256 71343]) ("slime-def-connection-var" code nil nil [71345 71464]) ("slime-def-connection-var" code nil nil [71466 71571]) ("slime-def-connection-var" code nil nil [71573 71658]) ("slime-connection-counter" variable nil nil [71684 71792]) ("slime-setup-connection" function (:arguments ("process" "symbolic-lisp-name")) nil [71808 72065]) ("slime-init-connection-state" function (:arguments ("proc" "symbolic-lisp-name")) nil [72067 72997]) ("slime-set-connection-info" function (:arguments ("connection" "info")) nil [72999 73676]) ("slime-generate-connection-name" function (:arguments ("lisp-name")) nil [73678 73954]) ("slime-generate-symbolic-lisp-name" function (:arguments ("lisp-name")) nil [73956 74253]) ("slime-connection-close-hook" function (:arguments ("process")) nil [74256 74583]) ("add-hook" code nil nil [74585 74655]) ("slime-disconnect" function (:user-visible-flag t) nil [74688 74810]) ("slime-make-default-connection" function (:user-visible-flag t) nil [74812 75107]) ("slime-choose-connection" function nil nil [75109 75614]) ("slime-find-connection-by-name" function (:arguments ("name")) nil [75616 75748]) ("slime-connection-port" function (:arguments ("connection")) nil [75750 75943]) ("slime-process" function (:arguments ("&optional" "connection")) nil [75945 76267]) ("slime-set-inferior-process" function (:arguments ("connection" "process")) nil [76325 76433]) ("slime-use-sigint-for-interrupt" function (:arguments ("&optional" "connection")) nil [76435 76643]) ("slime-inhibit-pipelining" variable (:user-visible-flag t :default-value t) nil [76645 76750]) ("slime-background-activities-enabled-p" function nil nil [76752 76903]) ("make-variable-buffer-local" code nil nil [78686 78912]) ("make-variable-buffer-local" code nil nil [78914 79091]) ("defmacro*" code nil nil [79288 80657]) ("put" code nil nil [80659 80699]) ("slime-current-package" function nil nil [80715 81159]) ("slime-find-buffer-package-function" variable nil nil [81161 81344]) ("slime-find-buffer-package" function nil nil [81346 81961]) ("slime-stack-eval-tags" variable nil nil [82207 82303]) ("slime-eval" function (:arguments ("sexp" "&optional" "package")) nil [82305 83120]) ("slime-eval-async" function (:arguments ("sexp" "&optional" "cont" "package")) nil [83122 83429]) ("slime-connected-p" function nil nil [83470 83582]) ("slime-check-connected" function nil nil [83584 83804]) ("slime-busy-p" function nil nil [83806 84107]) ("slime-reading-p" function nil nil [84109 84265]) ("slime-sync" function nil nil [84267 84535]) ("slime-ping" function (:user-visible-flag t) nil [84537 84647]) ("slime-def-connection-var" code nil nil [85094 85215]) ("slime-def-connection-var" code nil nil [85217 85312]) ("slime-dispatch-event" function (:arguments ("event" "&optional" "process")) nil [85314 88153]) ("slime-send" function (:arguments ("sexp")) nil [88155 88287]) ("slime-reset" function (:user-visible-flag t) nil [88289 88441]) ("+slime-sigint+" variable (:constant-flag t :default-value 2) nil [88443 88470]) ("slime-send-sigint" function nil nil [88472 88562]) ("slime-log-events" variable (:user-visible-flag t :default-value t) nil [88808 88890]) ("slime-outline-mode-in-events-buffer" variable (:user-visible-flag t) nil [88892 88995]) ("slime-event-buffer-name" variable (:default-value "*slime-events*") nil [88997 89086]) ("slime-log-event" function (:arguments ("event")) nil [89088 89650]) ("slime-pprint-event" function (:arguments ("event" "buffer")) nil [89652 89847]) ("slime-events-buffer" function nil nil [89849 90298]) ("slime-header-line-p" variable (:default-value t) nil [90322 90449]) ("make-variable-buffer-local" code nil nil [90451 90572]) ("make-variable-buffer-local" code nil nil [90574 90701]) ("slime-reset-repl-markers" function nil nil [90703 91275]) ("slime-output-buffer" function (:arguments ("&optional" "noprompt")) nil [91277 91708]) ("slime-repl-update-banner" function nil nil [91710 92676]) ("slime-changelog-date" function nil nil [92678 93090]) ("slime-init-output-buffer" function (:arguments ("connection")) nil [93092 93450]) ("slime-show-last-output-function" variable (:user-visible-flag t :default-value (quote slime-maybe-display-output-buffer)) nil [93452 93690]) ("slime-show-last-output-region" function (:arguments ("start" "end")) nil [93692 93887]) ("slime-maybe-display-output-buffer" function (:arguments ("start" "end")) nil [93889 94067]) ("slime-flush-output" function nil nil [94075 94147]) ("slime-show-last-output" function nil nil [94149 94434]) ("slime-display-output-buffer" function nil nil [94436 94694]) ("defsetf" code nil nil [94696 94753]) ("slime-with-output-end-mark" function (:arguments ("&rest" "body")) nil [94755 95761]) ("slime-output-filter" function (:arguments ("process" "string")) nil [95763 95965]) ("slime-open-stream-to-lisp" function (:arguments ("port")) nil [95967 96520]) ("slime-output-string" function (:arguments ("string")) nil [96522 96881]) ("slime-switch-to-output-buffer" function (:user-visible-flag t :arguments ("&optional" "connection")) nil [96883 97360]) ("make-variable-buffer-local" code nil nil [99713 99829]) ("make-variable-buffer-local" code nil nil [99831 99965]) ("slime-make-variables-buffer-local" function (:arguments ("&rest" "variables")) nil [99984 100093]) ("slime-make-variables-buffer-local" code nil nil [100095 100709]) ("slime-repl-mode-map" variable nil nil [100711 100739]) ("slime-repl-buffer" function (:arguments ("&optional" "create" "connection")) nil [100741 101082]) ("slime-repl-mode" function (:user-visible-flag t) nil [101084 101696]) ("slime-repl-insert-prompt" function (:arguments ("result" "&optional" "time")) nil [101698 103118]) ("slime-repl-move-output-mark-before-prompt" function (:arguments ("buffer")) nil [103120 103350]) ("slime-repl-current-input" function nil nil [103352 103624]) ("slime-repl-add-to-input-history" function (:arguments ("string")) nil [103626 103958]) ("slime-repl-eval-string" function (:arguments ("string")) nil [103962 104238]) ("slime-repl-send-string" function (:arguments ("string" "&optional" "command-string")) nil [104240 104486]) ("slime-repl-show-abort" function nil nil [104490 104887]) ("slime-mark-input-start" function nil nil [104891 105166]) ("slime-mark-output-start" function (:arguments ("&optional" "position")) nil [105168 105351]) ("slime-mark-output-end" function nil nil [105353 105521]) ("slime-repl-bol" function (:user-visible-flag t) nil [105523 105836]) ("slime-repl-eol" function (:user-visible-flag t) nil [105838 106133]) ("slime-preserve-zmacs-region" function nil nil [106135 106320]) ("slime-repl-in-input-area-p" function nil nil [106322 106456]) ("slime-repl-beginning-of-defun" function (:user-visible-flag t) nil [106460 106655]) ("slime-repl-end-of-defun" function (:user-visible-flag t) nil [106657 106833]) ("slime-repl-at-prompt-end-p" function nil nil [106835 107000]) ("slime-repl-find-prompt" function (:arguments ("move")) nil [107003 107246]) ("slime-search-property-change-fn" function (:arguments ("prop" "&optional" "backward")) nil [107248 107573]) ("slime-repl-previous-prompt" function (:user-visible-flag t) nil [107575 107756]) ("slime-repl-next-prompt" function (:user-visible-flag t) nil [107758 107927]) ("slime-repl-return" function (:user-visible-flag t :arguments ("&optional" "end-of-input")) nil [107929 108878]) ("slime-repl-send-input" function (:arguments ("&optional" "newline")) nil [108880 109891]) ("slime-repl-grab-old-input" function (:arguments ("replace")) nil [109893 111405]) ("slime-repl-closing-return" function (:user-visible-flag t) nil [111407 111742]) ("slime-repl-newline-and-indent" function (:user-visible-flag t) nil [111744 112131]) ("slime-repl-delete-current-input" function nil nil [112133 112247]) ("slime-repl-replace-input" function (:arguments ("string")) nil [112249 112356]) ("slime-repl-input-line-beginning-position" function nil nil [112358 112502]) ("slime-repl-clear-buffer" function (:user-visible-flag t) nil [112504 112817]) ("slime-repl-clear-output" function (:user-visible-flag t) nil [112819 113315]) ("slime-repl-set-package" function (:user-visible-flag t :arguments ("package")) nil [113317 113893]) ("slime-repl-wrap-history" variable nil nil [113912 114043]) ("slime-repl-history-pattern" variable nil nil [114045 114145]) ("slime-repl-history-replace" function (:arguments ("direction" "regexp" "&optional" "delete-at-end-p")) nil [114147 115433]) ("slime-repl-position-in-history" function (:arguments ("direction" "regexp")) nil [115435 116185]) ("slime-repl-matching-input-regexp" function nil nil [116187 116412]) ("slime-repl-previous-input" function nil nil [116414 116544]) ("slime-repl-next-input" function nil nil [116546 116671]) ("slime-repl-previous-matching-input" function (:arguments ("regexp")) nil [116673 116828]) ("slime-repl-next-matching-input" function (:arguments ("regexp")) nil [116830 116976]) ("slime-repl" function nil nil [116978 117049]) ("setq" code nil nil [117051 117098]) ("set-keymap-parent" code nil nil [117099 117152]) ("dolist" code nil nil [117154 117432]) ("slime-define-keys" code nil nil [117434 118687]) ("define-key" code nil nil [118689 118794]) ("define-minor-mode" code nil nil [118796 119034]) ("make-variable-buffer-local" code nil nil [119036 119104]) ("make-variable-buffer-local" code nil nil [119106 119171]) ("slime-repl-read-string" function (:arguments ("thread" "tag")) nil [119173 119434]) ("evaluate-in-emacs" function (:arguments ("expr" "thread" "tag")) nil [119436 119598]) ("slime-repl-return-string" function (:arguments ("string")) nil [119600 119868]) ("slime-repl-read-break" function nil nil [119870 119951]) ("slime-repl-abort-read" function (:arguments ("thread" "tag")) nil [119953 120169]) ("slime-repl-shortcut" type (:members ("symbol" "names" "handler" "one-liner") :type "struct") nil [120194 120294]) ("slime-repl-shortcut-table" variable nil nil [120296 120369]) ("slime-repl-shortcut-history" variable (:default-value (quote nil)) nil [120371 120455]) ("slime-handle-repl-shortcut" function nil nil [120457 121101]) ("slime-list-all-repl-shortcuts" function nil nil [121103 121246]) ("slime-lookup-shortcut" function (:arguments ("name")) nil [121248 121390]) ("defslime-repl-shortcut" function (:arguments ("elisp-name" "names" "&rest" "options")) nil [121392 122367]) ("slime-list-repl-short-cuts" function nil nil [122369 123113]) ("defslime-repl-shortcut" code nil nil [123117 123255]) ("defslime-repl-shortcut" code nil nil [123257 123405]) ("defslime-repl-shortcut" code nil nil [123407 123655]) ("defslime-repl-shortcut" code nil nil [123657 124188]) ("defslime-repl-shortcut" code nil nil [124190 124550]) ("defslime-repl-shortcut" code nil nil [124552 124686]) ("defslime-repl-shortcut" code nil nil [124688 125020]) ("defslime-repl-shortcut" code nil nil [125022 125374]) ("defslime-repl-shortcut" code nil nil [125376 125646]) ("defslime-repl-shortcut" code nil nil [125648 125935]) ("defslime-repl-shortcut" code nil nil [125937 126056]) ("defslime-repl-shortcut" code nil nil [126058 126534]) ("defslime-repl-shortcut" code nil nil [126536 127067]) ("defslime-repl-shortcut" code nil nil [127069 127319]) ("defslime-repl-shortcut" code nil nil [127321 127560]) ("defslime-repl-shortcut" code nil nil [127562 127804]) ("defslime-repl-shortcut" code nil nil [127806 128076]) ("defslime-repl-shortcut" code nil nil [128078 128264]) ("slime-restart-inferior-lisp-aux" function nil nil [128266 128432]) ("slime-restart-sentinel" function (:arguments ("process" "message")) nil [128436 129392]) ("slime-kill-all-buffers" function nil nil [129424 129875]) ("slime-scratch-mode-map" variable nil nil [129893 129924]) ("setq" code nil nil [129925 129975]) ("set-keymap-parent" code nil nil [129976 130032]) ("slime-scratch-buffer" function nil nil [130034 130311]) ("slime-switch-to-scratch-buffer" function nil nil [130313 130480]) ("slime-scratch" function nil nil [130482 130557]) ("slime-define-keys" code nil nil [130559 130646]) ("slime-compile-and-load-file" function (:user-visible-flag t) nil [130714 131121]) ("slime-lisp-modes" variable (:default-value (quote (lisp-mode))) nil [131123 131161]) ("slime-compile-file" function (:user-visible-flag t :arguments ("&optional" "load")) nil [131163 132075]) ("slime-find-asd" function nil nil [132077 132426]) ("slime-load-system" function (:user-visible-flag t :arguments ("&optional" "system-name")) nil [132428 132699]) ("slime-read-system-name" function (:arguments ("&optional" "prompt" "initial-value")) nil [132701 133220]) ("slime-oos" function (:arguments ("system-name" "operation" "&rest" "keyword-args")) nil [133222 133622]) ("slime-compile-defun" function (:user-visible-flag t) nil [133624 133921]) ("slime-compile-region" function (:user-visible-flag t :arguments ("start" "end")) nil [133923 134081]) ("slime-compile-string" function (:arguments ("string" "start-offset")) nil [134083 134360]) ("slime-hide-style-warning-count-if-zero" variable (:default-value t) nil [134362 134411]) ("slime-note-count-string" function (:arguments ("severity" "count" "&optional" "suppress-if-zero")) nil [134413 134620]) ("slime-show-note-counts" function (:arguments ("notes" "&optional" "secs")) nil [134622 135368]) ("slime-xrefs-for-notes" function (:arguments ("notes")) nil [135370 135939]) ("slime-one-line-ify" function (:arguments ("string")) nil [135941 136257]) ("slime-length>" function (:arguments ("list" "n")) nil [136259 136410]) ("slime-compilation-finished" function (:arguments ("result" "buffer")) nil [136412 136731]) ("slime-compilation-finished-continuation" function nil nil [136733 136899]) ("slime-highlight-notes" function (:user-visible-flag t :arguments ("notes")) nil [136901 137171]) ("slime-compiler-notes" function nil nil [137173 137306]) ("slime-remove-old-overlays" function nil nil [137308 137634]) ("slime-merge-notes-for-display" function (:arguments ("notes")) nil [137699 137980]) ("slime-merge-notes" function (:arguments ("notes")) nil [137982 138585]) ("slime-intersperse" function (:arguments ("element" "list")) nil [138587 138793]) ("slime-notes-in-same-location-p" function (:arguments ("a" "b")) nil [138795 138897]) ("slime-group-similar" function (:arguments ("similar-p" "list")) nil [138899 139397]) ("slime-maybe-show-xrefs-for-notes" function (:arguments ("&optional" "notes")) nil [139428 139801]) ("slime-note-has-location-p" function (:arguments ("note")) nil [139803 139897]) ("slime-maybe-list-compiler-notes" function (:arguments ("notes")) nil [139899 140174]) ("slime-list-compiler-notes" function (:user-visible-flag t :arguments ("&optional" "notes")) nil [140176 140802]) ("slime-alistify" function (:arguments ("list" "key" "test")) nil [140804 141312]) ("slime-note\\.severity" function (:arguments ("note")) nil [141314 141377]) ("slime-note\\.message" function (:arguments ("note")) nil [141379 141440]) ("slime-note\\.short-message" function (:arguments ("note")) nil [141442 141552]) ("slime-note\\.references" function (:arguments ("note")) nil [141554 141621]) ("slime-note\\.location" function (:arguments ("note")) nil [141623 141686]) ("slime-severity-label" function (:arguments ("severity")) nil [141688 141884]) ("slime-tree-for-note" function (:arguments ("note")) nil [141886 142205]) ("slime-tree-for-severity" function (:arguments ("severity" "notes" "collapsed-p")) nil [142207 142532]) ("slime-compiler-notes-to-tree" function (:arguments ("notes")) nil [142534 142852]) ("slime-compiler-notes-mode-map" variable nil nil [142854 142892]) ("define-derived-mode" code nil nil [142894 143080]) ("slime-define-keys" code nil nil [143082 143308]) ("slime-compiler-notes-default-action-or-show-details/mouse" function (:user-visible-flag t :arguments ("event")) nil [143310 143752]) ("slime-compiler-notes-default-action-or-show-details" function (:user-visible-flag t) nil [143754 144022]) ("slime-compiler-notes-quit" function nil nil [144024 144213]) ("slime-compiler-notes-show-details" function nil nil [144215 144565]) ("slime-tree" type (:members ("item" "print-fn" "kids" "collapsed-p" "prefix" "start-mark" "end-mark" "plist") :type "struct") nil [144589 144846]) ("slime-tree-leaf-p" function (:arguments ("tree")) nil [144848 144911]) ("slime-tree-default-printer" function (:arguments ("tree")) nil [144913 145004]) ("slime-tree-print-with-references" function (:arguments ("tree")) nil [145006 145394]) ("slime-tree-insert-references" function (:arguments ("references")) nil [145396 146284]) ("slime-tree-decoration" function (:arguments ("tree")) nil [146286 146416]) ("slime-tree-insert-list" function (:arguments ("list" "prefix")) nil [146418 146730]) ("slime-tree-insert-decoration" function (:arguments ("tree")) nil [146732 146815]) ("slime-tree-indent-item" function (:arguments ("start" "end" "prefix")) nil [146817 147132]) ("slime-tree-insert" function (:arguments ("tree" "prefix")) nil [147134 147856]) ("slime-tree-at-point" function nil nil [147858 147978]) ("slime-tree-delete" function (:arguments ("tree")) nil [147980 148135]) ("slime-tree-toggle" function (:arguments ("tree")) nil [148137 148521]) ("slime-overlay-note" function (:arguments ("note")) nil [148562 149264]) ("slime-create-note-overlay" function (:arguments ("note" "start" "end" "severity" "message")) nil [149266 150106]) ("slime-merge-note-into-overlay" function (:arguments ("overlay" "severity" "message")) nil [150307 150806]) ("slime-choose-overlay-region" function (:arguments ("note")) nil [150808 151481]) ("slime-choose-overlay-for-sexp" function (:arguments ("location")) nil [151493 151898]) ("slime-same-line-p" function (:arguments ("pos1" "pos2")) nil [151900 152116]) ("slime-severity-face" function (:arguments ("severity")) nil [152118 152444]) ("slime-most-severe" function (:arguments ("sev1" "sev2")) nil [152446 152833]) ("slime-visit-source-path" function (:arguments ("source-path")) nil [152835 153007]) ("slime-forward-positioned-source-path" function (:arguments ("source-path")) nil [153009 153417]) ("slime-forward-source-path" function (:arguments ("source-path")) nil [153419 153833]) ("slime-goto-location-buffer" function (:arguments ("buffer")) nil [153835 154270]) ("slime-goto-location-position" function (:arguments ("position")) nil [154272 156281]) ("slime-search-call-site" function (:arguments ("fname")) nil [156283 156740]) ("slime-goto-source-location" function (:arguments ("location" "&optional" "noerror")) nil [156743 157862]) ("slime-point-moves-p" function (:arguments ("&rest" "body")) nil [157864 158115]) ("put" code nil nil [158117 158167]) ("slime-forward-sexp" function (:arguments ("&optional" "count")) nil [158169 158522]) ("slime-forward-blanks" function nil nil [158524 158793]) ("slime-forward-reader-comment" function nil nil [158924 159348]) ("slime-forward-reader-conditional" function nil nil [159350 159792]) ("slime-to-feature-keyword" function (:arguments ("symbol")) nil [159794 159977]) ("slime-eval-feature-conditional" function (:arguments ("e")) nil [159979 160388]) ("slime-isearch" function (:arguments ("string")) nil [160626 161529]) ("slime-isearch-with-function" function (:arguments ("search-fn" "string")) nil [161531 162398]) ("slime-next-note" function (:user-visible-flag t) nil [162464 162697]) ("slime-previous-note" function (:user-visible-flag t) nil [162699 162948]) ("slime-remove-notes" function (:user-visible-flag t) nil [162950 163087]) ("slime-show-note" function (:arguments ("overlay")) nil [163089 163352]) ("slime-temporarily-highlight-note" function (:arguments ("overlay")) nil [163354 163915]) ("slime-note-at-point" function nil nil [163952 164119]) ("slime-note-overlay-p" function (:arguments ("overlay")) nil [164121 164245]) ("slime-note-overlays-at-point" function nil nil [164247 164413]) ("slime-find-next-note" function nil nil [164415 164606]) ("slime-find-previous-note" function nil nil [164608 164803]) ("slime-find-note" function (:arguments ("next-candidate-fn")) nil [164805 165177]) ("slime-space" function (:user-visible-flag t :arguments ("n")) nil [165203 165594]) ("slime-echo-arglist" function nil nil [165596 166025]) ("slime-arglist" function (:user-visible-flag t :arguments ("name")) nil [166027 166277]) ("slime-insert-arglist" function (:user-visible-flag t :arguments ("name")) nil [166279 166828]) ("slime-complete-form" function (:user-visible-flag t) nil [166830 167495]) ("slime-get-arglist" function (:arguments ("symbol-name")) nil [167497 167651]) ("slime-autodoc-mode" variable (:user-visible-flag t) nil [167705 167809]) ("slime-autodoc-cache-type" variable (:user-visible-flag t :default-value (quote last)) nil [167811 168184]) ("slime-autodoc-cache" variable nil nil [168186 168328]) ("slime-autodoc-mode" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [168330 168690]) ("slime-autodoc" function nil nil [168692 169628]) ("slime-autodoc-global-at-point" function nil nil [169630 169823]) ("slime-global-variable-name-p" function (:arguments ("name")) nil [169825 170007]) ("slime-get-cached-autodoc" function (:arguments ("symbol-name")) nil [170009 170383]) ("slime-update-autodoc-cache" function (:arguments ("symbol-name" "documentation")) nil [170385 170753]) ("slime-autodoc-idle-timer" variable nil nil [170796 170878]) ("slime-autodoc-delay" variable (:user-visible-flag t :default-value 0.2) nil [170880 170986]) ("slime-autodoc-start-timer" function (:user-visible-flag t) nil [170988 171359]) ("slime-autodoc-stop-timer" function nil nil [171361 171593]) ("slime-autodoc-timer-hook" function nil nil [171595 171997]) ("slime-autodoc-message-ok-p" function nil nil [171999 172439]) ("slime-typeout-window" variable nil nil [172583 172648]) ("slime-typeout-frame-properties" variable (:default-value (quote ((height . 10) (minibuffer)))) nil [172650 172786]) ("slime-typeout-active-p" function nil nil [172788 172894]) ("slime-typeout-message" function (:arguments ("format-string" "&rest" "format-args")) nil [172896 173131]) ("slime-make-typeout-frame" function (:user-visible-flag t) nil [173133 173480]) ("slime-ensure-typeout-frame" function (:user-visible-flag t) nil [173482 173657]) ("slime-completions-buffer-name" variable (:default-value "*Completions*") nil [173767 173821]) ("make-variable-buffer-local" code nil nil [173823 174044]) ("make-variable-buffer-local" code nil nil [174046 174325]) ("slime-complete-maybe-save-window-configuration" function nil nil [174327 174699]) ("slime-complete-delay-restoration" function nil nil [174701 174876]) ("slime-complete-forget-window-configuration" function nil nil [174878 175024]) ("slime-complete-restore-window-configuration" function nil nil [175026 175781]) ("slime-complete-maybe-restore-window-configuration" function nil nil [175783 176542]) ("slime-completion-window-active-p" function nil nil [176544 176797]) ("slime-display-completion-list" function (:arguments ("completion-list")) nil [176799 177245]) ("slime-complete-symbol" function (:user-visible-flag t) nil [177249 177436]) ("slime-complete-symbol*" function nil nil [177438 179555]) ("slime-complete-symbol*-fancy-bit" function nil nil [179557 180461]) ("slime-simple-complete-symbol" function nil nil [180463 181711]) ("slime-minibuffer-respecting-message" function (:arguments ("format" "&rest" "format-args")) nil [181713 182145]) ("slime-read-expression-map" variable (:default-value (make-sparse-keymap)) nil [182147 182257]) ("set-keymap-parent" code nil nil [182259 182325]) ("define-key" code nil nil [182327 182393]) ("define-key" code nil nil [182394 182463]) ("slime-read-expression-history" variable (:default-value (quote nil)) nil [182465 182565]) ("slime-read-from-minibuffer" function (:arguments ("prompt" "&optional" "initial-value")) nil [182568 183351]) ("slime-bogus-completion-alist" function (:arguments ("list")) nil [183353 183627]) ("slime-completions" function (:arguments ("prefix")) nil [183629 183732]) ("slime-simple-completions" function (:arguments ("prefix")) nil [183734 183851]) ("slime-fuzzy-target-buffer" variable nil nil [183878 183980]) ("slime-fuzzy-saved-window-configuration" variable nil nil [183981 184113]) ("slime-fuzzy-start" variable nil nil [184114 184239]) ("slime-fuzzy-end" variable nil nil [184240 184354]) ("slime-fuzzy-original-text" variable nil nil [184355 184521]) ("slime-fuzzy-text" variable nil nil [184522 184726]) ("slime-fuzzy-first" variable nil nil [184727 184874]) ("slime-fuzzy-current-completion" variable nil nil [184875 185085]) ("define-derived-mode" code nil nil [185087 185345]) ("slime-fuzzy-completions-map" variable (:default-value (let* ((map (make-sparse-keymap))) (define-key map "q" (quote slime-fuzzy-abort)) (define-key map "" (quote slime-fuzzy-select)) (define-key map "n" (quote slime-fuzzy-next)) (define-key map "\356" (quote slime-fuzzy-next)) (define-key map "p" (quote slime-fuzzy-prev)) (define-key map "\360" (quote slime-fuzzy-prev)) (define-key map "" (quote scroll-down)) (define-key map " " (quote scroll-up)) (define-key map [mouse-2] (quote slime-fuzzy-select/mouse)) map)) nil [185347 185906]) ("slime-fuzzy-completions" function (:arguments ("prefix" "&optional" "default-package")) nil [185908 186438]) ("slime-fuzzy-selected" function (:arguments ("prefix" "completion")) nil [186440 186844]) ("slime-fuzzy-complete-symbol" function (:user-visible-flag t) nil [186846 188082]) ("slime-get-fuzzy-buffer" function nil nil [188085 188162]) ("slime-fuzzy-explanation" variable (:default-value "Click <mouse-2> on a completion to select it.
In this buffer, type n and p to navigate between completions.
Type RET to select the completion near point.  Type q to abort.
Flags: boundp fboundp generic-function class macro special-operator

") nil [188164 188534]) ("slime-fuzzy-insert-completion-choice" function (:arguments ("completion" "max-length")) nil [188536 189855]) ("slime-fuzzy-insert" function (:arguments ("text")) nil [189857 190632]) ("slime-fuzzy-choices-buffer" function (:arguments ("completions" "start" "end")) nil [190634 192360]) ("slime-fuzzy-insert-from-point" function nil nil [192362 193005]) ("slime-fuzzy-post-command-hook" function nil nil [193007 193509]) ("slime-fuzzy-next" function (:user-visible-flag t) nil [193511 193702]) ("slime-fuzzy-prev" function (:user-visible-flag t) nil [193704 193950]) ("slime-fuzzy-abort" function (:user-visible-flag t) nil [193952 194221]) ("slime-fuzzy-select" function (:user-visible-flag t) nil [194223 194782]) ("slime-fuzzy-select/mouse" function (:user-visible-flag t :arguments ("event")) nil [194784 195244]) ("slime-fuzzy-done" function nil nil [195246 196011]) ("slime-fuzzy-save-window-configuration" function nil nil [196013 196648]) ("slime-fuzzy-maybe-restore-window-configuration" function nil nil [196650 197135]) ("slime-fuzzy-window-configuration-change-add-hook" function nil nil [197137 197385]) ("slime-fuzzy-window-configuration-change" function nil nil [197387 197724]) ("slime-find-definition-history-ring" variable (:default-value (make-ring 20)) nil [197750 197869]) ("slime-push-definition-stack" function (:arguments ("&optional" "mark")) nil [197871 198127]) ("slime-pop-find-definition-stack" function (:user-visible-flag t) nil [198129 198632]) ("slime-definition" type (:members ("dspec" "location") :type "struct") nil [198634 198754]) ("slime-edit-definition" function (:user-visible-flag t :arguments ("name" "&optional" "where")) nil [198756 199350]) ("slime-goto-definition" function (:arguments ("name" "definitions" "&optional" "where")) nil [199352 199952]) ("slime-edit-definition-other-window" function (:user-visible-flag t :arguments ("name")) nil [199954 200166]) ("slime-edit-definition-other-frame" function (:user-visible-flag t :arguments ("name")) nil [200168 200378]) ("slime-edit-definition-with-etags" function (:arguments ("name")) nil [200380 200716]) ("slime-etags-definitions" function (:arguments ("name")) nil [200718 201616]) ("slime-show-definitions" function (:arguments ("name" "definitions")) nil [201618 201850]) ("slime-first-change-hook" function nil nil [201877 202370]) ("slime-setup-first-change-hook" function nil nil [202372 202503]) ("add-hook" code nil nil [202505 202563]) ("slime-eval-for-lisp" function (:arguments ("thread" "tag" "fun" "args")) nil [202587 202947]) ("slime-ed-frame" variable nil nil [202962 203023]) ("slime-ed-use-dedicated-frame" variable (:user-visible-flag t :default-value t) nil [203025 203135]) ("slime-ed" function (:arguments ("what")) nil [203137 204281]) ("slime-interactive-eval" function (:user-visible-flag t :arguments ("string")) nil [204358 204886]) ("slime-display-eval-result" function (:arguments ("value")) nil [204888 204958]) ("slime-eval-print" function (:arguments ("string")) nil [204960 205394]) ("slime-eval-with-transcript" function (:arguments ("form" "&optional" "fn" "wait")) nil [205396 206066]) ("slime-eval-describe" function (:arguments ("form")) nil [206068 206321]) ("slime-insert-transcript-delimiter" function (:arguments ("string")) nil [206323 206747]) ("slime-display-buffer-region" function (:arguments ("buffer" "start" "end" "&optional" "other-window")) nil [206749 207467]) ("slime-last-expression" function nil nil [207471 207593]) ("slime-eval-last-expression" function (:user-visible-flag t) nil [207595 207744]) ("slime-eval-last-expression-display-output" function (:user-visible-flag t) nil [207746 207968]) ("slime-eval-defun" function (:user-visible-flag t) nil [207972 208303]) ("slime-eval-region" function (:user-visible-flag t :arguments ("start" "end")) nil [208305 208500]) ("slime-eval-buffer" function (:user-visible-flag t) nil [208502 208664]) ("slime-re-evaluate-defvar" function (:user-visible-flag t :arguments ("form")) nil [208666 208944]) ("slime-pprint-eval-last-expression" function (:user-visible-flag t) nil [208946 209142]) ("slime-eval-print-last-expression" function (:user-visible-flag t :arguments ("string")) nil [209144 209352]) ("slime-edit-value" function (:user-visible-flag t :arguments ("form-string")) nil [209379 210056]) ("make-variable-buffer-local" code nil nil [210058 210173]) ("define-minor-mode" code nil nil [210175 210311]) ("slime-edit-value-callback" function (:arguments ("form-string" "current-value" "package")) nil [210313 210859]) ("slime-edit-value-commit" function (:user-visible-flag t) nil [210861 211531]) ("slime-untrace-all" function (:user-visible-flag t) nil [211548 211655]) ("slime-toggle-trace-fdefinition" function (:user-visible-flag t :arguments ("&optional" "using-context-p")) nil [211657 211993]) ("slime-trace-query" function (:arguments ("spec")) nil [211995 213943]) ("slime-extract-context" function nil nil [213945 214883]) ("slime-parse-context" function (:arguments ("name")) nil [214885 216555]) ("slime-in-expression-p" function (:arguments ("pattern")) nil [216557 217381]) ("slime-pattern-path" function (:arguments ("pattern")) nil [217383 217822]) ("slime-beginning-of-list" function (:arguments ("&optional" "up")) nil [217824 218065]) ("slime-parse-toplevel-form" function nil nil [218067 218236]) ("slime-arglist-specializers" function (:arguments ("arglist")) nil [218241 218568]) ("slime-disassemble-symbol" function (:user-visible-flag t :arguments ("symbol-name")) nil [218570 218790]) ("slime-undefine-function" function (:user-visible-flag t :arguments ("symbol-name")) nil [218792 219069]) ("slime-load-file" function (:user-visible-flag t :arguments ("filename")) nil [219071 219576]) ("slime-toggle-profile-fdefinition" function (:user-visible-flag t :arguments ("fname-string")) nil [219596 219916]) ("slime-unprofile-all" function (:user-visible-flag t) nil [219918 220087]) ("slime-profile-report" function (:user-visible-flag t) nil [220089 220217]) ("slime-profile-reset" function (:user-visible-flag t) nil [220219 220400]) ("slime-profiled-functions" function (:user-visible-flag t) nil [220402 220610]) ("slime-profile-package" function (:user-visible-flag t :arguments ("package" "callers" "methods")) nil [220612 221199]) ("slime-hyperspec-lookup" function (:user-visible-flag t :arguments ("symbol-name")) nil [221224 221936]) ("slime-show-description" function (:arguments ("string" "package")) nil [221940 222071]) ("slime-describe-symbol" function (:user-visible-flag t :arguments ("symbol-name")) nil [222073 222337]) ("slime-documentation" function (:user-visible-flag t :arguments ("symbol-name")) nil [222339 222667]) ("slime-describe-function" function (:arguments ("symbol-name")) nil [222669 222903]) ("slime-apropos-summary" function (:arguments ("string" "case-sensitive-p" "package" "only-external-p")) nil [222905 223280]) ("slime-apropos" function (:user-visible-flag t :arguments ("string" "&optional" "only-external-p" "package" "case-sensitive-p")) nil [223282 224325]) ("slime-apropos-all" function (:user-visible-flag t) nil [224327 224480]) ("slime-apropos-package" function (:user-visible-flag t :arguments ("package" "&optional" "internal")) nil [224482 224868]) ("slime-show-apropos" function (:arguments ("plists" "string" "package" "summary")) nil [224870 225333]) ("slime-apropos-label-properties" variable (:default-value (progn (require (quote apropos)) (cond ((and (boundp (quote apropos-label-properties)) (symbol-value (quote apropos-label-properties)))) ((boundp (quote apropos-label-face)) (typecase (symbol-value (quote apropos-label-face)) (symbol (\` (face (\, (or (symbol-value (quote apropos-label-face)) (quote italic))) mouse-face highlight))) (list (symbol-value (quote apropos-label-face)))))))) nil [225335 225833]) ("slime-print-apropos" function (:arguments ("plists")) nil [225835 227076]) ("slime-call-describer" function (:arguments ("item")) nil [227078 227241]) ("slime-xref-mode-map" variable nil nil [227275 227303]) ("slime-xref-saved-window-configuration" variable nil nil [227304 227397]) ("define-derived-mode" code nil nil [227399 227588]) ("slime-define-keys" code nil nil [227590 227806]) ("slime-next-line/not-add-newlines" function nil nil [227808 227924]) ("dolist" code nil nil [227976 228218]) ("slime-xref-buffer" function nil nil [228271 228513]) ("slime-init-xref-buffer" function (:arguments ("package" "ref-type" "symbol")) nil [228515 228772]) ("slime-display-xref-buffer" function nil nil [228774 229126]) ("defmacro*" code nil nil [229128 230017]) ("put" code nil nil [230019 230072]) ("slime-insert-xrefs" function (:arguments ("xrefs")) nil [230074 230802]) ("slime-show-xrefs" function (:arguments ("xrefs" "type" "symbol" "package")) nil [230804 231198]) ("slime-who-calls" function (:user-visible-flag t :arguments ("symbol")) nil [231223 231399]) ("slime-calls-who" function (:user-visible-flag t :arguments ("symbol")) nil [231401 231590]) ("slime-who-references" function (:user-visible-flag t :arguments ("symbol")) nil [231592 231792]) ("slime-who-binds" function (:user-visible-flag t :arguments ("symbol")) nil [231794 231977]) ("slime-who-sets" function (:user-visible-flag t :arguments ("symbol")) nil [231979 232159]) ("slime-who-macroexpands" function (:user-visible-flag t :arguments ("symbol")) nil [232161 232357]) ("slime-who-specializes" function (:user-visible-flag t :arguments ("symbol")) nil [232359 232558]) ("slime-list-callers" function (:user-visible-flag t :arguments ("symbol-name")) nil [232560 232755]) ("slime-list-callees" function (:user-visible-flag t :arguments ("symbol-name")) nil [232757 232952]) ("slime-xref" function (:arguments ("type" "symbol")) nil [232954 233265]) ("slime-xref-location-at-point" function nil nil [233292 233605]) ("slime-goto-xref" function (:user-visible-flag t) nil [233607 233857]) ("slime-show-xref" function (:user-visible-flag t) nil [233859 234046]) ("slime-goto-next-xref" function nil nil [234054 234764]) ("slime-next-location-function" variable nil nil [234766 234860]) ("slime-next-location" function (:user-visible-flag t) nil [234862 235160]) ("slime-xref-quit" function (:user-visible-flag t) nil [235162 235395]) ("slime-xref-cleanup" function nil nil [235397 235610]) ("slime-eval-macroexpand" function (:arguments ("expander")) nil [235637 235766]) ("slime-macroexpand-1" function (:user-visible-flag t :arguments ("&optional" "repeatedly")) nil [235768 236090]) ("slime-macroexpand-all" function (:user-visible-flag t) nil [236092 236254]) ("slime-ir1-expand" function (:user-visible-flag t) nil [236256 236407]) ("slime-interrupt" function (:user-visible-flag t) nil [236436 236565]) ("slime-quit" function nil nil [236567 236658]) ("slime-quit-lisp" function (:user-visible-flag t :arguments ("&optional" "keep-buffers")) nil [236660 236932]) ("slime-quit-sentinel" function (:arguments ("process" "message")) nil [236934 237361]) ("slime-set-package" function (:arguments ("package")) nil [237363 237570]) ("slime-set-default-directory" function (:user-visible-flag t :arguments ("directory")) nil [237572 238109]) ("slime-sync-package-and-default-directory" function (:user-visible-flag t) nil [238111 239012]) ("sldb-hook" variable nil nil [239039 239100]) ("slime-add-face" function (:arguments ("face" "string")) nil [239102 239214]) ("in-sldb-face" function (:arguments ("name" "string")) nil [239218 239548]) ("make-variable-buffer-local" code nil nil [239598 239736]) ("make-variable-buffer-local" code nil nil [239738 239881]) ("make-variable-buffer-local" code nil nil [239883 239999]) ("make-variable-buffer-local" code nil nil [240001 240118]) ("make-variable-buffer-local" code nil nil [240120 240249]) ("make-variable-buffer-local" code nil nil [240251 240355]) ("define-derived-mode" code nil nil [240379 241935]) ("sldb-help-summary" function (:user-visible-flag t) nil [241937 242969]) ("slime-define-keys" code nil nil [242971 243942]) ("dolist" code nil nil [243980 244216]) ("define-sldb-invoke-restart-key" function (:arguments ("number" "key")) nil [244275 244616]) ("define-sldb-invoke-restart-keys" function (:arguments ("from" "to")) nil [244618 244794]) ("define-sldb-invoke-restart-keys" code nil nil [244796 244833]) ("sldb-overlays" variable (:default-value (quote nil)) nil [244874 244978]) ("sldb-buffers" function nil nil [244980 245167]) ("sldb-find-buffer" function (:arguments ("thread")) nil [245169 245466]) ("sldb-get-default-buffer" function nil nil [245468 245594]) ("sldb-get-buffer" function (:arguments ("thread")) nil [245596 245795]) ("sldb-debugged-continuations" function (:arguments ("connection")) nil [245797 246109]) ("sldb-setup" function (:arguments ("thread" "level" "condition" "restarts" "frames" "conts")) nil [246111 247605]) ("sldb-activate" function (:arguments ("thread" "level")) nil [247607 247953]) ("sldb-exit" function (:arguments ("thread" "level" "&optional" "stepping")) nil [247955 248330]) ("sldb-insert-condition" function (:arguments ("condition")) nil [248332 248898]) ("sldb-insert-references" function (:arguments ("references")) nil [248900 249408]) ("sldb-reference-properties" function (:arguments ("reference")) nil [249410 250269]) ("sldb-format-reference-source" function (:arguments ("where")) nil [250271 250485]) ("sldb-format-reference-node" function (:arguments ("what")) nil [250487 250684]) ("sldb-lookup-reference" function nil nil [250686 251484]) ("sldb-dispatch-extras" function (:arguments ("extras")) nil [251486 251644]) ("sldb-insert-restarts" function (:arguments ("restarts")) nil [251648 252222]) ("sldb-add-face" function (:arguments ("face" "string")) nil [252226 252381]) ("sldb-prune-initial-frames" function (:arguments ("frames")) nil [252383 252739]) ("sldb-insert-frame" function (:arguments ("frame" "&optional" "detailedp")) nil [252741 253115]) ("sldb-insert-frames" function (:arguments ("frames" "maximum-length")) nil [253117 253884]) ("sldb-fetch-more-frames" function (:arguments ("&rest" "ignore")) nil [253886 254542]) ("sldb-highlight" variable (:default-value t) nil [254567 254667]) ("sldb-show-location-recenter-arg" variable nil nil [254669 254783]) ("sldb-default-action/mouse" function (:user-visible-flag t :arguments ("event")) nil [254785 255081]) ("sldb-default-action" function (:user-visible-flag t) nil [255083 255250]) ("sldb-delete-overlays" function nil nil [255252 255350]) ("sldb-frame-number-at-point" function nil nil [255352 255508]) ("sldb-var-number-at-point" function nil nil [255510 255653]) ("sldb-previous-frame-number" function nil nil [255655 255770]) ("sldb-show-source" function (:user-visible-flag t) nil [255772 255942]) ("sldb-show-frame-source" function (:arguments ("frame-number")) nil [255944 256299]) ("slime-show-source-location" function (:arguments ("source-location")) nil [256301 256485]) ("slime-show-buffer-position" function (:arguments ("position")) nil [256487 256921]) ("slime-recenter-window" function (:arguments ("window" "line")) nil [256923 257280]) ("sldb-highlight-sexp" function (:arguments ("&optional" "start" "end")) nil [257282 257709]) ("sldb-toggle-details" function (:user-visible-flag t :arguments ("&optional" "on")) nil [257713 258122]) ("sldb-frame-details-visible-p" function nil nil [258124 258260]) ("sldb-show-frame-details" function nil nil [258262 259527]) ("sldb-frame-region" function nil nil [259529 259801]) ("sldb-maybe-recenter-region" function (:arguments ("start" "end")) nil [259803 260094]) ("sldb-hide-frame-details" function nil nil [260096 260453]) ("sldb-eval-in-frame" function (:user-visible-flag t :arguments ("string")) nil [260457 260892]) ("sldb-pprint-eval-in-frame" function (:user-visible-flag t :arguments ("string")) nil [260894 261275]) ("sldb-inspect-in-frame" function (:user-visible-flag t :arguments ("string")) nil [261277 261692]) ("sldb-inspect-condition" function (:user-visible-flag t) nil [261694 261885]) ("sldb-forward-frame" function nil nil [261887 261980]) ("sldb-backward-frame" function nil nil [261982 262127]) ("sldb-goto-last-frame" function nil nil [262129 262302]) ("sldb-down" function (:user-visible-flag t) nil [262304 262386]) ("sldb-up" function (:user-visible-flag t) nil [262388 262576]) ("sldb-sugar-move" function (:arguments ("move-fn")) nil [262578 262784]) ("sldb-details-up" function (:user-visible-flag t) nil [262788 262903]) ("sldb-details-down" function (:user-visible-flag t) nil [262905 263020]) ("sldb-frame-locals" function (:arguments ("frame")) nil [263022 263109]) ("sldb-insert-locals" function (:arguments ("frame" "prefix")) nil [263111 263650]) ("sldb-inspect-var" function nil nil [263652 263874]) ("sldb-list-locals" function (:user-visible-flag t) nil [263876 264258]) ("sldb-catch-tags" function (:arguments ("frame")) nil [264260 264349]) ("sldb-list-catch-tags" function nil nil [264351 264468]) ("sldb-fetch-all-frames" function nil nil [264470 264878]) ("sldb-end-of-backtrace" function (:user-visible-flag t) nil [264880 265044]) ("sldb-beginning-of-backtrace" function (:user-visible-flag t) nil [265046 265168]) ("sldb-quit" function (:user-visible-flag t) nil [265172 265341]) ("sldb-continue" function (:user-visible-flag t) nil [265343 265554]) ("sldb-abort" function (:user-visible-flag t) nil [265556 265736]) ("sldb-invoke-restart" function (:user-visible-flag t :arguments ("&optional" "number")) nil [265738 266131]) ("sldb-restart-at-point" function nil nil [266133 266252]) ("sldb-break-with-default-debugger" function (:user-visible-flag t) nil [266254 266448]) ("sldb-step" function (:user-visible-flag t) nil [266450 266645]) ("sldb-break-on-return" function (:user-visible-flag t) nil [266647 266947]) ("sldb-break" function (:user-visible-flag t :arguments ("name")) nil [266949 267195]) ("sldb-disassemble" function (:user-visible-flag t) nil [267197 267470]) ("sldb-return-from-frame" function (:user-visible-flag t :arguments ("string")) nil [267472 267899]) ("sldb-restart-frame" function (:user-visible-flag t) nil [267901 268212]) ("sldb-print-condition" function (:user-visible-flag t) nil [268214 268614]) ("slime-list-threads" function (:user-visible-flag t) nil [268645 269200]) ("slime-thread-insert" function (:arguments ("idx" "name" "summary" "id")) nil [269202 269573]) ("define-derived-mode" code nil nil [269595 269830]) ("slime-define-keys" code nil nil [269832 270060]) ("slime-thread-quit" function nil nil [270062 270139]) ("slime-thread-kill" function nil nil [270141 270328]) ("slime-thread-attach" function nil nil [270330 270580]) ("slime-thread-debug" function nil nil [270582 270734]) ("slime-registered-lisp-implementations" variable nil nil [270764 270813]) ("slime-register-lisp-implementation" function (:arguments ("name" "command")) nil [270815 271185]) ("slime-select-lisp-implementation" function (:arguments ("name")) nil [271187 271356]) ("slime-find-lisp-implementation" function (:arguments ("name")) nil [271358 271576]) ("slime-find-lisp-implementation-name" function (:arguments ("command")) nil [271578 271694]) ("slime-symbolic-lisp-name-p" function (:arguments ("name")) nil [271696 271905]) ("define-derived-mode" code nil nil [271908 272141]) ("slime-define-keys" code nil nil [272143 272378]) ("slime-connection-at-point" function nil nil [272380 272508]) ("slime-goto-connection" function (:user-visible-flag t) nil [272510 272731]) ("slime-quit-connection-at-point" function (:arguments ("connection")) nil [272733 273014]) ("slime-connection-list-make-default" function (:user-visible-flag t) nil [273018 273225]) ("slime-list-connections" function (:user-visible-flag t) nil [273227 273652]) ("slime-update-connection-list" function (:user-visible-flag t) nil [273654 273867]) ("slime-draw-connection-list" function nil nil [273869 274665]) ("defgroup" code nil nil [274685 274781]) ("slime-inspector-topline-face" variable (:default-value (quote ((t nil)))) nil [274783 274900]) ("slime-inspector-label-face" variable (:default-value (quote ((t (:inherit font-lock-constant-face))))) nil [274902 275046]) ("slime-inspector-value-face" variable (:default-value (if (slime-face-inheritance-possible-p) (quote ((t (:inherit font-lock-builtin-face)))) (quote ((((background light)) (:foreground "MediumBlue" :bold t)) (((background dark)) (:foreground "LightGray" :bold t)))))) nil [275048 275382]) ("slime-inspector-action-face" variable (:default-value (if (slime-face-inheritance-possible-p) (quote ((t (:inherit font-lock-warning-face)))) (quote ((t (:foreground "OrangeRed")))))) nil [275384 275616]) ("slime-inspector-type-face" variable (:default-value (quote ((t (:inherit font-lock-type-face))))) nil [275618 275765]) ("slime-inspector-mark-stack" variable (:default-value (quote nil)) nil [275767 275806]) ("slime-saved-window-config" variable nil nil [275807 275841]) ("slime-inspect" function (:user-visible-flag t :arguments ("string")) nil [275843 276112]) ("define-derived-mode" code nil nil [276114 276292]) ("slime-inspector-buffer" function nil nil [276294 276668]) ("slime-inspector-fontify" function (:arguments ("face" "string")) nil [276670 276797]) ("slime-open-inspector" function (:arguments ("inspected-parts" "&optional" "point")) nil [276799 277699]) ("slime-inspector-insert-ispec" function (:arguments ("ispec")) nil [277701 278353]) ("slime-inspector-operate-on-point" function (:user-visible-flag t) nil [278355 279168]) ("slime-inspector-operate-on-click" function (:user-visible-flag t :arguments ("event")) nil [279170 279649]) ("slime-inspector-copy-down" function (:user-visible-flag t :arguments ("number")) nil [279651 279970]) ("slime-inspector-pop" function nil nil [279972 280233]) ("slime-inspector-next" function nil nil [280235 280486]) ("slime-inspector-quit" function nil nil [280490 280670]) ("slime-inspector-next-inspectable-object" function (:user-visible-flag t :arguments ("arg")) nil [280672 282227]) ("slime-inspector-previous-inspectable-object" function (:user-visible-flag t :arguments ("arg")) nil [282229 282494]) ("slime-inspector-describe" function nil nil [282498 282601]) ("slime-define-keys" code nil nil [282603 283138]) ("slime-expand-class-node" function (:arguments ("widget")) nil [283164 283451]) ("slime-browse-classes" function (:user-visible-flag t :arguments ("name")) nil [283453 283859]) ("slime-call-with-browser-setup" function (:arguments ("buffer" "package" "title" "fn")) nil [283861 284192]) ("slime-expand-xrefs" function (:arguments ("widget")) nil [284217 284854]) ("slime-browse-xrefs" function (:user-visible-flag t :arguments ("name" "type")) nil [284856 285510]) ("slime-selector-methods" variable nil nil [285536 285754]) ("slime-selector" function (:user-visible-flag t) nil [285756 286552]) ("def-slime-selector-method" function (:arguments ("key" "description" "&rest" "body")) nil [286554 287142]) ("def-slime-selector-method" code nil nil [287145 287636]) ("def-slime-selector-method" code nil nil [287638 287728]) ("def-slime-selector-method" code nil nil [287730 287817]) ("def-slime-selector-method" code nil nil [287819 288015]) ("def-slime-selector-method" code nil nil [288017 288104]) ("def-slime-selector-method" code nil nil [288106 288229]) ("def-slime-selector-method" code nil nil [288231 288409]) ("def-slime-selector-method" code nil nil [288411 288546]) ("def-slime-selector-method" code nil nil [288548 288663]) ("def-slime-selector-method" code nil nil [288665 288768]) ("slime-recently-visited-buffer" function (:arguments ("mode")) nil [288770 289189]) ("*slime-comment-start-regexp*" variable (:default-value "\\(\\(^\\|[^
\\\\]\\)\\([\\\\][\\\\]\\)*\\);+[ 	]*") nil [289216 289354]) ("slime-beginning-of-comment" function nil nil [289356 289755]) ("slime-close-all-sexp" function (:user-visible-flag t :arguments ("&optional" "region")) nil [289757 291084]) ("slime-insert-balanced-comments" function (:user-visible-flag t :arguments ("arg")) nil [291086 291996]) ("slime-remove-balanced-comments" function (:user-visible-flag t) nil [291998 292311]) ("slime-pretty-lambdas" function (:user-visible-flag t) nil [292313 292772]) ("slime-close-parens-limit" variable (:default-value 16) nil [292774 292875]) ("slime-close-parens-at-point" function (:user-visible-flag t) nil [292877 293338]) ("slime-highlight-suppressed-forms" variable (:default-value t) nil [293358 293557]) ("slime-reader-conditional-face" variable (:default-value (if (slime-face-inheritance-possible-p) (quote ((t (:inherit font-lock-comment-face)))) (quote ((((background light)) (:foreground "DimGray" :bold t)) (((background dark)) (:foreground "LightGray" :bold t)))))) nil [293559 293877]) ("slime-search-suppressed-forms" function (:arguments ("limit")) nil [293879 294808]) ("slime-activate-font-lock-magic" function nil nil [294810 295322]) ("when" code nil nil [295324 295398]) ("slime-conservative-indentation" variable nil nil [295420 295581]) ("slime-update-indentation" function (:user-visible-flag t) nil [295583 295761]) ("slime-handle-indentation-update" function (:arguments ("alist")) nil [295763 296595]) ("slime-reindent-defun" function (:user-visible-flag t :arguments ("&optional" "force-text-fill")) nil [296597 297948]) ("slime-test" type (:members ("name" "fname" "args" "doc" "inputs" "fails-for") :type "struct") nil [297969 298057]) ("slime-tests" variable (:default-value (quote nil)) nil [298061 298114]) ("slime-test-debug-on-error" variable (:user-visible-flag t) nil [298116 298200]) ("slime-total-tests" variable nil nil [298202 298286]) ("slime-failed-tests" variable nil nil [298288 298371]) ("slime-expected-failures" variable nil nil [298373 298465]) ("slime-test-buffer-name" variable (:default-value "*Tests*") nil [298467 298565]) ("slime-current-test" variable nil nil [298610 298637]) ("slime-unexpected-failures" variable nil nil [298638 298672]) ("slime-run-tests" function (:user-visible-flag t) nil [298700 299266]) ("slime-test-should-fail-p" function (:arguments ("test")) nil [299268 299394]) ("slime-execute-tests" function nil nil [299396 301487]) ("slime-batch-test" function (:arguments ("results-file")) nil [301489 302133]) ("slime-create-test-results-buffer" function nil nil [302179 302529]) ("slime-delete-hidden-outline-text" function nil nil [302531 302980]) ("slime-test-heading" function (:arguments ("level" "format" "&rest" "args")) nil [302982 303327]) ("slime-test-failure" function (:arguments ("keyword" "string")) nil [303329 303791]) ("slime-test-message" function (:arguments ("string")) nil [303793 303970]) ("def-slime-test" function (:arguments ("name" "args" "doc" "inputs" "&rest" "body")) nil [304012 305008]) ("slime-check" function (:arguments ("test-name" "&rest" "body")) nil [305010 305934]) ("slime-print-check-ok" function (:arguments ("test-name")) nil [305936 306009]) ("slime-print-check-failed" function (:arguments ("test-name")) nil [306011 306097]) ("slime-print-check-error" function (:arguments ("reason")) nil [306099 306191]) ("put" code nil nil [306193 306238]) ("put" code nil nil [306239 306281]) ("setq" code nil nil [306338 306360]) ("slime-check-top-level" function (:arguments ("&optional" "test-name")) nil [306362 306506]) ("slime-at-top-level-p" function nil nil [306508 306619]) ("slime-wait-condition" function (:arguments ("name" "predicate" "timeout")) nil [306621 306956]) ("slime-sync-to-top-level" function (:arguments ("timeout")) nil [306958 307067]) ("slime-check-sldb-level" function (:arguments ("expected")) nil [307069 307359]) ("slime-test-expect" function (:arguments ("name" "expected" "actual" "&optional" "test")) nil [307361 307703]) ("sldb-level" function nil nil [307705 307820]) ("slime-sldb-level=" function (:arguments ("level")) nil [307822 307963]) ("def-slime-test" code nil nil [307965 309090]) ("def-slime-test" code nil nil [309092 310037]) ("def-slime-test" code nil nil [310039 311570]) ("def-slime-test" code nil nil [311572 312643]) ("def-slime-test" code nil nil [312645 313719]) ("def-slime-test" code nil nil [313721 314190]) ("def-slime-test" code nil nil [314192 315054]) ("def-slime-test" code nil nil [315057 315656]) ("def-slime-test" code nil nil [315658 316447]) ("def-slime-test" code nil nil [316449 317314]) ("def-slime-test" code nil nil [317316 318278]) ("def-slime-test" code nil nil [318280 319156]) ("def-slime-test" code nil nil [319160 320020]) ("def-slime-test" code nil nil [320022 320820]) ("def-slime-test" code nil nil [320822 321555]) ("def-slime-test" code nil nil [321557 322166]) ("slime-cl-symbol-name" function (:arguments ("symbol")) nil [322243 322414]) ("slime-cl-symbol-package" function (:arguments ("symbol" "&optional" "default")) nil [322416 322614]) ("slime-cl-symbol-external-ref-p" function (:arguments ("symbol")) nil [322616 322916]) ("slime-qualify-cl-symbol" function (:arguments ("symbol-or-name")) nil [322918 323088]) ("slime-qualify-cl-symbol-name" function (:arguments ("symbol-or-name")) nil [323090 323564]) ("slime-defun-at-point" function nil nil [323621 323837]) ("slime-beginning-of-symbol" function nil nil [323839 324074]) ("slime-end-of-symbol" function nil nil [324076 324184]) ("put" code nil nil [324186 324234]) ("put" code nil nil [324235 324295]) ("slime-symbol-start-pos" function nil nil [324297 324512]) ("slime-symbol-end-pos" function nil nil [324514 324594]) ("slime-symbol-name-at-point" function nil nil [324596 325285]) ("slime-symbol-at-point" function nil nil [325287 325441]) ("slime-sexp-at-point" function nil nil [325443 325625]) ("slime-function-called-at-point/line" function nil nil [325627 325979]) ("slime-function-called-at-point" function nil nil [325981 326797]) ("slime-enclosing-operator-names" function nil nil [326799 327382]) ("when" code nil nil [327413 327813]) ("eval-when" code nil nil [327815 327956]) ("slime-defun-if-undefined" code nil nil [327958 328632]) ("slime-defun-if-undefined" code nil nil [328634 329548]) ("slime-defun-if-undefined" code nil nil [329550 329792]) ("slime-defun-if-undefined" code nil nil [329794 330148]) ("slime-defun-if-undefined" code nil nil [330150 330244]) ("slime-defun-if-undefined" code nil nil [330246 330679]) ("slime-defun-if-undefined" code nil nil [330681 331342]) ("slime-defun-if-undefined" code nil nil [331344 331569]) ("slime-defun-if-undefined" code nil nil [331571 331768]) ("slime-defun-if-undefined" code nil nil [331770 332657]) ("slime-defun-if-undefined" code nil nil [332659 332780]) ("slime-defun-if-undefined" code nil nil [332782 332891]) ("slime-defun-if-undefined" code nil nil [332893 334071]) ("slime-defun-if-undefined" code nil nil [334073 334686]) ("unless" code nil nil [334688 335212]) ("slime-emacs-20-p" function nil nil [335214 335308]) ("when" code nil nil [335310 335399]) ("sldb-xemacs-emulate-point-entered-hook" function nil nil [335401 335547]) ("sldb-xemacs-post-command-hook" function nil nil [335549 335698]) ("bytecomp" include nil nil [335721 335740]) ("let" code nil nil [335741 336329]) ("run-hooks" code nil nil [336331 336359]) ("slime" package nil nil [336361 336377]))
    :file "slime.el"
    :pointmax 336403
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0beta3"
  :semanticdb-version "2.0beta3"
  )
